/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("cors");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("express");

/***/ }),

/***/ "express-session":
/*!**********************************!*\
  !*** external "express-session" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("express-session");

/***/ }),

/***/ "http-status-codes":
/*!************************************!*\
  !*** external "http-status-codes" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("http-status-codes");

/***/ }),

/***/ "joi":
/*!**********************!*\
  !*** external "joi" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("joi");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "mongoose-findorcreate":
/*!****************************************!*\
  !*** external "mongoose-findorcreate" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("mongoose-findorcreate");

/***/ }),

/***/ "morgan":
/*!*************************!*\
  !*** external "morgan" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("morgan");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _base_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base/index.js */ \"./src/base/index.js\");\n/* harmony import */ var _middlewares_global_middleware_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middlewares/global-middleware.js */ \"./src/middlewares/global-middleware.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/mongo.service.js */ \"./src/services/mongo.service.js\");\n\r\n\r\n\r\n\r\n\r\nconst app = express__WEBPACK_IMPORTED_MODULE_0__();\r\n\r\napp.use(express__WEBPACK_IMPORTED_MODULE_0__.json());\r\n\r\n// createSuperAdmin();\r\n// createPermission();\r\n\r\n(0,_middlewares_global_middleware_js__WEBPACK_IMPORTED_MODULE_2__.setGlobalmiddleware)(app);\r\n\r\napp.use('/api', _base_index_js__WEBPACK_IMPORTED_MODULE_1__.restRouter);\r\n\r\n// handler the UNAUTHORIZED\r\napp.use('/failure', (req, res, next) => {\r\n  const error = new Error('Not found');\r\n  error.message = 'Invalid Authorization';\r\n  error.status = 401;\r\n  next(error);\r\n});\r\n\r\napp.use((req, res, next) => {\r\n  const error = new Error('Not found');\r\n  error.message = 'Invalid route';\r\n  error.status = 404;\r\n  next(error);\r\n});\r\n\r\napp.use((error, req, res, next) => {\r\n  return res.status(error.status || 500).json({\r\n    message: error.message,\r\n    status_code: error.status,\r\n  });\r\n});\r\n\r\n/**\r\n * Start Express server.\r\n */\r\napp.listen(app.get('port'), () => {\r\n  console.log('%s App is running at http://localhost:%d in %s mode', app.get('port'), app.get('env'));\r\n  console.log('Press CTRL-C to stop\\n');\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/app.js?");

/***/ }),

/***/ "./src/base/index.js":
/*!***************************!*\
  !*** ./src/base/index.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   restRouter: () => (/* binding */ restRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _routes_auth_route_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../routes/auth.route.js */ \"./src/routes/auth.route.js\");\n/* harmony import */ var _routes_role_route_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../routes/role.route.js */ \"./src/routes/role.route.js\");\n/* harmony import */ var _routes_user_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../routes/user.route.js */ \"./src/routes/user.route.js\");\n/* harmony import */ var _routes_organization_route_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../routes/organization.route.js */ \"./src/routes/organization.route.js\");\n/* harmony import */ var _routes_company_route_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../routes/company.route.js */ \"./src/routes/company.route.js\");\n/* harmony import */ var _routes_team_route_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../routes/team.route.js */ \"./src/routes/team.route.js\");\n/* harmony import */ var _routes_department_route_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../routes/department.route.js */ \"./src/routes/department.route.js\");\n/* harmony import */ var _routes_sub_department_route_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../routes/sub.department.route.js */ \"./src/routes/sub.department.route.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst restRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nrestRouter.use('/auth', _routes_auth_route_js__WEBPACK_IMPORTED_MODULE_1__.authRouter);\r\nrestRouter.use('/role', _routes_role_route_js__WEBPACK_IMPORTED_MODULE_2__.roleRouter);\r\nrestRouter.use('/user', _routes_user_route_js__WEBPACK_IMPORTED_MODULE_3__.userRouter);\r\nrestRouter.use(\"/organization\", _routes_organization_route_js__WEBPACK_IMPORTED_MODULE_4__.organizationRouter);\r\nrestRouter.use(\"/company\", _routes_company_route_js__WEBPACK_IMPORTED_MODULE_5__.companyRouter);\r\nrestRouter.use(\"/team\", _routes_team_route_js__WEBPACK_IMPORTED_MODULE_6__.teamRouter);\r\nrestRouter.use(\"/department\", _routes_department_route_js__WEBPACK_IMPORTED_MODULE_7__.departmentRouter);\r\nrestRouter.use(\"/subDepartment\", _routes_sub_department_route_js__WEBPACK_IMPORTED_MODULE_8__.subDepartmentRouter);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/base/index.js?");

/***/ }),

/***/ "./src/config/config.js":
/*!******************************!*\
  !*** ./src/config/config.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devConfig: () => (/* binding */ devConfig)\n/* harmony export */ });\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n\r\n\r\ndotenv__WEBPACK_IMPORTED_MODULE_0__.config({ path: '.env' });\r\n\r\nconst devConfig = {\r\n    port: process.env.PORT,\r\n    db_username: process.env.DATABASE_USERNAME,\r\n    db_password: process.env.DATABASE_PASSWORD,\r\n    db_name: process.env.DATABASE_NAME,\r\n    db_host: process.env.DATABASE_HOST,\r\n    secret: process.env.SECRET_KEY,\r\n    dev_db : process.env.DEV_DB\r\n}\n\n//# sourceURL=webpack://mvc_project_starter/./src/config/config.js?");

/***/ }),

/***/ "./src/config/consts.js":
/*!******************************!*\
  !*** ./src/config/consts.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminPerm: () => (/* binding */ AdminPerm),\n/* harmony export */   InactiveAdminPerm: () => (/* binding */ InactiveAdminPerm),\n/* harmony export */   InactiveOrgAdminPerm: () => (/* binding */ InactiveOrgAdminPerm),\n/* harmony export */   NoPerm: () => (/* binding */ NoPerm),\n/* harmony export */   OrgAdminPerm: () => (/* binding */ OrgAdminPerm),\n/* harmony export */   SuperAdminPerm: () => (/* binding */ SuperAdminPerm),\n/* harmony export */   UserPerm: () => (/* binding */ UserPerm),\n/* harmony export */   ViewUserPerm: () => (/* binding */ ViewUserPerm)\n/* harmony export */ });\nconst SuperAdminPerm = [\"SUPER_ADMIN\"];\r\nconst OrgAdminPerm = [\"ORGANIZATION_ADMIN\"]\r\nconst InactiveOrgAdminPerm = [\"INACTIVE_ORGANIZATION_ADMIN\"]\r\nconst AdminPerm = [\"USER_ADMIN\"];\r\nconst InactiveAdminPerm = [\"INACTIVE_USER_ADMIN\"];\r\nconst NoPerm = [\"NO_PERMISSIONS\"];\r\nconst ViewUserPerm = [\"VIEW_USER\"];\r\nconst UserPerm = [\"CREATE_USER\", \"DELETE_USER\", \"UPDATE_USER\", \"VIEW_USER\"];\n\n//# sourceURL=webpack://mvc_project_starter/./src/config/consts.js?");

/***/ }),

/***/ "./src/config/db.js":
/*!**************************!*\
  !*** ./src/config/db.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   initialSchemas: () => (/* binding */ initialSchemas),\n/* harmony export */   userSchemas: () => (/* binding */ userSchemas)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"./src/config/config.js\");\n/* harmony import */ var _models_user_model_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/user.model.js */ \"./src/models/user.model.js\");\n/* harmony import */ var _models_role_model_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/role.model.js */ \"./src/models/role.model.js\");\n/* harmony import */ var _models_permission_model_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/permission.model.js */ \"./src/models/permission.model.js\");\n/* harmony import */ var _models_company_model_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/company.model.js */ \"./src/models/company.model.js\");\n/* harmony import */ var _models_organization_model_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/organization.model.js */ \"./src/models/organization.model.js\");\n/* harmony import */ var _models_team_model_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/team.model.js */ \"./src/models/team.model.js\");\n/* harmony import */ var _models_department_model_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../models/department.model.js */ \"./src/models/department.model.js\");\n/* harmony import */ var _models_sub_department_model_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../models/sub.department.model.js */ \"./src/models/sub.department.model.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mongoOptions = {\r\n    useUnifiedTopology: true,\r\n    autoIndex: true,\r\n    connectTimeoutMS: 10000,\r\n    socketTimeoutMS: 30000,\r\n}\r\n\r\nfunction connectDB() {\r\n    return new Promise((resolve, reject) => {\r\n        const mongoURL = _config_js__WEBPACK_IMPORTED_MODULE_1__.devConfig.dev_db\r\n        mongoose__WEBPACK_IMPORTED_MODULE_0__.connect(mongoURL, mongoOptions)\r\n            .then((conn) => {\r\n                console.log('%s Database connected successfully!');\r\n                resolve(conn)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Could not connect to MongoDB..', err.message);\r\n                console.error('Full error:', err);\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\r\n\r\n\r\nconst initialSchemas = new Map([\r\n    [\"User\", _models_user_model_js__WEBPACK_IMPORTED_MODULE_2__.userLinkSchema],\r\n    [\"Permission\", _models_permission_model_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]],\r\n]);\r\nconst userSchemas = new Map([\r\n    ['User', _models_user_model_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]],\r\n    ['Role', _models_role_model_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]],\r\n    [\"Company\", _models_company_model_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]],\r\n    [\"Organization\", _models_organization_model_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]],\r\n    [\"Team\", _models_team_model_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]],\r\n    [\"Department\", _models_department_model_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]],\r\n    [\"SubDepartment\", _models_sub_department_model_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]]\r\n]);\n\n//# sourceURL=webpack://mvc_project_starter/./src/config/db.js?");

/***/ }),

/***/ "./src/controllers/auth.controller.js":
/*!********************************************!*\
  !*** ./src/controllers/auth.controller.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils.js */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CLIENT_URL = \"http://localhost:3000/\";\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n\r\n    login: async (req, res) => {\r\n        const { email, password } = req.body;\r\n\r\n        try {\r\n            let message = \"\"\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_4__.initialSchemas);\r\n            const UserModel = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"User\");\r\n            const initUser = await UserModel.findOne({ email });\r\n            if (!initUser) {\r\n                message = 'User does not exists'\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json({ message });\r\n            }\r\n            else {\r\n                if (initUser.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.SuperAdminPerm[0])) {\r\n                    const payload = { username: initUser.username, id: initUser._id, userRole: initUser.userRole, organizationName: initUser.organizationName, };\r\n                    const token = await (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_1__.getJWTToken)(payload);\r\n                    const data = {\r\n                        \"token\": token,\r\n                        \"detail\": initUser,\r\n                        \"permissions\": _config_consts_js__WEBPACK_IMPORTED_MODULE_5__.SuperAdminPerm\r\n                    }\r\n                    // RESPOND WITH SUCCESS\r\n                    message = 'Successfully Logged In';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, data);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }\r\n                else {\r\n                    const newDB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(initUser.organizationName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n                    const UserModel = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(newDB, \"User\");\r\n                    const userDoc = await UserModel.findOne({ email });\r\n                    if (!userDoc || !(await userDoc.matchPassword(password))) {\r\n                        message = 'Invalid email or password'\r\n                        return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json({ message });\r\n                    }\r\n                    const OrgModel = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(newDB, \"Organization\");\r\n                    const CompanyModel = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(newDB, \"Company\");\r\n                    const orgDoc = await OrgModel.findOne({ organizationName: userDoc.organizationName });\r\n                    let companyActive = true;\r\n                    if (orgDoc?.status === \"inactive\" && !userDoc?.userRole?.includes(\"ORGANIZATION_ADMIN\")) {\r\n                        message = 'Organization Inactive'\r\n                        return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.FORBIDDEN).json({ message });\r\n                    }\r\n                    if (userDoc?.companyName !== undefined && userDoc?.companyName !== null) {\r\n                        const companyDoc = await CompanyModel.findOne({ companyName: userDoc.companyName });\r\n                        if (companyDoc?.status === \"inactive\" && !userDoc?.userRole?.includes(\"USER_ADMIN\")) {\r\n                            message = 'Company Inactive'\r\n                            return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.FORBIDDEN).json({ message });\r\n                        } else {\r\n                            companyActive = false;\r\n                        }\r\n                    }\r\n                    const payload = { username: userDoc.username, id: userDoc._id, userRole: userDoc.userRole, organizationName: userDoc.organizationName, companyName: userDoc.companyName };\r\n                    const userPermissions = new Set();\r\n                    if (orgDoc.status === \"inactive\") {\r\n                        userPermissions.add(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.InactiveOrgAdminPerm[0]);\r\n                    }\r\n                    else if (companyActive) {\r\n                        userPermissions.add(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.InactiveAdminPerm[0]);\r\n                    }\r\n                    else if (userDoc.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.OrgAdminPerm[0])) {\r\n                        userPermissions.add(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.OrgAdminPerm[0]);\r\n                    }\r\n                    else if (userDoc.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.AdminPerm[0])) {\r\n                        userPermissions.add(_config_consts_js__WEBPACK_IMPORTED_MODULE_5__.AdminPerm[0]);\r\n                    }\r\n                    else {\r\n                        const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(newDB, \"Role\");\r\n                        const roles = await Role.find({ roleName: { $in: userDoc.userRole } });\r\n                        if (!roles) {\r\n                            userPermissions.add(\"NO_PERMISSIONS\")\r\n                        }\r\n                        else {\r\n                            roles?.map(role => {\r\n                                role?.permissions?.map(permission => {\r\n                                    userPermissions.add(permission);\r\n                                })\r\n                            })\r\n                        }\r\n                    }\r\n                    const permsArr = Array.from(userPermissions);\r\n                    const token = await (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_1__.getJWTToken)(payload);\r\n                    const data = {\r\n                        \"token\": token,\r\n                        \"detail\": userDoc,\r\n                        \"permissions\": permsArr\r\n                    }\r\n                    // RESPOND WITH SUCCESS\r\n                    message = 'Successfully Logged In';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, data);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    logout: (req, res) => {\r\n        req.logout();\r\n        res.cookie('token', '').json('ok');\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/auth.controller.js?");

/***/ }),

/***/ "./src/controllers/company.controller.js":
/*!***********************************************!*\
  !*** ./src/controllers/company.controller.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils.js */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _services_user_service_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/user.service.js */ \"./src/services/user.service.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_4__.Types;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const { error, value } = _services_user_service_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].validateCreateCompanyUserData(req.body);\r\n            if (error) {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(error.message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            const {\r\n                username,\r\n                email,\r\n                password,\r\n                companyName,\r\n                description\r\n            } = req.body;\r\n            const organizationName = req.orgName\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_7__.initialSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            let user = await User.findOne({ email });\r\n            if (user) {\r\n                message = 'User already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                user = await User.create({\r\n                    email,\r\n                    organizationName\r\n                });\r\n                const userDb = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n                const newUser = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(userDb, \"User\");\r\n                const companyModel = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(userDb, \"Company\");\r\n                const company = await companyModel.create({\r\n                    companyName,\r\n                    adminUser: { username, email },\r\n                    description\r\n                });\r\n                user = await new newUser({\r\n                    username,\r\n                    email,\r\n                    password,\r\n                    organizationName,\r\n                    companyName,\r\n                    userRole: _config_consts_js__WEBPACK_IMPORTED_MODULE_8__.AdminPerm\r\n                });\r\n                await user.save();\r\n                message = 'Company has been created successfully.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, { user, company });\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, companyName, description } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const Company = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Company\");\r\n            const company = await Company.findById(new ObjectId(id));\r\n            if (!company) {\r\n                message = 'Company not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                const existingCompany = await Company.findOne({ companyName });\r\n                if (!existingCompany || company?.companyName === companyName) {\r\n                    const company = await Company.findByIdAndUpdate(new ObjectId(id), { companyName, description }).then(res => {\r\n                        message = 'Successfully updated company';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { companyName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Company\");\r\n            await User.findOneAndUpdate({ companyName }, { status: \"inactive\" }).then((res) => {\r\n                message = 'Company inactivated successfully';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            });\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    get: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            const user = await User.findById(req.userId, { username: 1, email: 1, userRole: 1 });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.initialSchemas);\r\n            const Company = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Company\");\r\n            const getCompanies = await Company.find({});\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getCompanies);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/company.controller.js?");

/***/ }),

/***/ "./src/controllers/department.controller.js":
/*!**************************************************!*\
  !*** ./src/controllers/department.controller.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_2__.Types;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const {\r\n                description,\r\n                departmentName\r\n            } = req.body;\r\n            const organizationName = req.orgName\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            let department = await Department.findOne({ departmentName });\r\n            if (department) {\r\n                message = 'Department already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                const department = await Department.create({\r\n                    description,\r\n                    departmentName\r\n                });\r\n                message = 'Department has been created successfully.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, department);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, departmentName, description } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const department = await Department.findById(new ObjectId(id));\r\n            if (!department) {\r\n                message = 'Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                const existingDepartment = await Department.findOne({ departmentName });\r\n                if (!existingDepartment || department?.departmentName === departmentName) {\r\n                    await Department.findByIdAndUpdate(new ObjectId(id), { departmentName, description }).then(res => {\r\n                        message = 'Successfully updated department';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    assignDepHead: async (req, res) => {\r\n        const { departmentName, departmentHead } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const department = await Department.findOne({ departmentName });\r\n            if (!department) {\r\n                message = 'Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Department.findOneAndUpdate({ departmentName }, { departmentHead }).then(res => {\r\n                    message = 'Successfully updated department';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }).catch(error => {\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                })\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { departmentName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const department = await Department.findOne({ departmentName });\r\n            if (!department) {\r\n                message = 'Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Department.findOneAndDelete({ departmentName }).then((res) => {\r\n                    message = 'Department inactivated successfully';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    get: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"User\");\r\n            const user = await User.findById(req.userId, { username: 1, email: 1, userRole: 1 });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const getDepartments = await Department.find({});\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getDepartments);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/department.controller.js?");

/***/ }),

/***/ "./src/controllers/organization.controller.js":
/*!****************************************************!*\
  !*** ./src/controllers/organization.controller.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var _services_user_service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/user.service.js */ \"./src/services/user.service.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        const {\r\n            username,\r\n            email,\r\n            password,\r\n            organizationName\r\n        } = req.body;\r\n        try {\r\n            // VALIDATE THE REQUEST\r\n            const { error, value } = _services_user_service_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].validateOrganizationUserData(req.body);\r\n            if (error) {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(error.message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            // DESSTRUCTURE VALIDATED DATA\r\n            const frobiddenNames = [\"admin\", \"config\", \"test\", \"local\"]\r\n            let message = '';\r\n            if (frobiddenNames.includes(organizationName.toLowerCase())) {\r\n                message = 'Organization name is not allowed.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_4__.initialSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"User\");\r\n            const org = await User.findOne({ organizationName });\r\n            if (org) {\r\n                message = 'Organization name is takken up.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            else {\r\n                let user = await User.findOne({ email });\r\n                if (user) {\r\n                    message = 'User email already exists';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                    return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n                } else {\r\n                    user = await User.create({\r\n                        email,\r\n                        organizationName\r\n                    });\r\n                    const userDb = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n                    const newUser = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(userDb, \"User\");\r\n                    const Org = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(userDb, \"Organization\");\r\n                    const dbPayload = {\r\n                        orgName: organizationName.toLowerCase(),\r\n                        password: password,\r\n                    }\r\n                    await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.createDBUser)(userDb, dbPayload)\r\n                    user = await new newUser({\r\n                        username,\r\n                        email,\r\n                        password,\r\n                        userRole: _config_consts_js__WEBPACK_IMPORTED_MODULE_5__.OrgAdminPerm,\r\n                        organizationName\r\n                    });\r\n                    await user.save();\r\n                    const organization = await Org.create({\r\n                        organizationName,\r\n                        adminUser: { username, email },\r\n                    })\r\n                    message = 'User has been created successfully.';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, { user, organization });\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { organizationName, description } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Organization = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Organization\");\r\n            const organization = await Organization.findOne({ organizationName });\r\n            if (!organization) {\r\n                message = 'Organization not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                const organization = await Organization.findOneAndUpdate({ organizationName }, { description }).then(res => {\r\n                    message = 'Successfully updated organization';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }).catch(error => {\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                })\r\n\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { organizationName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Organization = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Organization\");\r\n            const organization = await Organization.findOne({ organizationName });\r\n            if (!organization) {\r\n                message = 'Organization not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Organization.findOneAndUpdate({ organizationName }, { status: \"inactive\" }).then((res) => {\r\n                    message = 'Organization inactivated successfully';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.initialSchemas);\r\n            const Organization = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Organization\");\r\n            const getOrganizations = await Organization.find({});\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getOrganizations);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/organization.controller.js?");

/***/ }),

/***/ "./src/controllers/role.controller.js":
/*!********************************************!*\
  !*** ./src/controllers/role.controller.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils.js */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var _services_role_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/role.service.js */ \"./src/services/role.service.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_4__.Types;\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const { error, value } = _services_role_service_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].validateRoleCreationData(req.body);\r\n            if (error) {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(error.message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            const {\r\n                roleName,\r\n                permissions\r\n            } = req.body;\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            let role = await Role.findOne({ roleName });\r\n            if (role) {\r\n                message = 'Role already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                var dbPerms = permissions\r\n                if (permissions.length === 0) {\r\n                    dbPerms = [\"NO_PERMISSIONS\"]\r\n                }\r\n                role = new Role({\r\n                    roleName,\r\n                    permissions: dbPerms\r\n                });\r\n                await Role.create(role);\r\n                message = 'Role has been created successfully.';\r\n            }\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, role);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, roleName, permissions } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            const existingRole = await Role.find({ roleName })\r\n            const currentRole = await Role.findById(new ObjectId(id))\r\n            if (existingRole && roleName !== currentRole?.roleName) {\r\n                message = 'Rolename already exists in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            else {\r\n                const role = await Role.findByIdAndUpdate(new ObjectId(id), { roleName, permissions });\r\n                if (!role) {\r\n                    message = 'Role not found';\r\n                    return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n                }\r\n                message = 'Successfully updated';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, {});\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n\r\n    delete: async (req, res) => {\r\n        const { roleName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            await Role.deleteOne({ roleName },).then(() => {\r\n                message = 'Successfully removed';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, {});\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            });\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n\r\n    setRole: async (req, res) => {\r\n        try {\r\n            // VALIDATE THE REQUEST\r\n            const { error, value } = _services_role_service_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].validateSetRoleData(req.body);\r\n            if (error) {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(error.message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            // DESSTRUCTURE VALIDATED DATA\r\n            const {\r\n                roleName,\r\n                email\r\n            } = req.body;\r\n            // CHECK IF USER ALREADY EXISTS\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            let user = await User.findOneAndUpdate({ email }, { userRole: roleName }, { new: true }).select('-password, -createdAt, -updatedAt');\r\n            if (user) {\r\n                message = 'User role has been set successfully.';\r\n                // RESPOND WITH SUCCESS\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n            else {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(\"User not Found\", 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n\r\n    get: async (req, res) => {\r\n        const { roleName } = req.body;\r\n        console.log(roleName)\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            const role = await Role.findOne({ roleName });\r\n            if (!role) {\r\n                message = 'Role not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, role);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            const getRoles = await Role.find();\r\n            if (!getRoles) {\r\n                message = 'Role not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getRoles);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n\r\n    userPermissions: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_5__.userSchemas);\r\n            const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Role\");\r\n            const userPermissions = new Set();\r\n            if (req?.userRole.includes(\"USER_ADMIN\")) {\r\n                message = 'Successfully';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, [\"USER_ADMIN\"]);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n            else {\r\n                const roles = await Role.find({ roleName: { $in: req?.userRole } });\r\n                if (!roles) {\r\n                    message = 'Role not found';\r\n                    return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n                }\r\n                roles?.map(role => {\r\n                    role?.permissions?.map(permission => {\r\n                        userPermissions.add(permission);\r\n                    })\r\n                })\r\n                const resultArr = Array.from(userPermissions);\r\n                if (resultArr.length === 0) {\r\n                    resultArr.push(\"NO_PERMISSIONS\")\r\n                }\r\n                message = 'Successfully';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, resultArr);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n\r\n    listPermissions: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_5__.initialSchemas);\r\n            const Permission = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"Permission\");\r\n            const getPermissions = await Permission.find();\r\n            if (!getPermissions) {\r\n                message = 'Permission not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getPermissions);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/role.controller.js?");

/***/ }),

/***/ "./src/controllers/sub.department.controller.js":
/*!******************************************************!*\
  !*** ./src/controllers/sub.department.controller.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_2__.Types;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const {\r\n                description,\r\n                departmentName,\r\n                subDepartmentName\r\n            } = req.body;\r\n            const organizationName = req.orgName\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const subDepartment = await SubDepartment.findOne({ subDepartmentName });\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const department = await Department.findOne({ departmentName });\r\n            if (!department) {\r\n                message = 'Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            if (subDepartment) {\r\n                message = 'SubDepartment already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                const subDepartment = await SubDepartment.create({\r\n                    description,\r\n                    departmentName,\r\n                    subDepartmentName\r\n                })\r\n                await Department.findOneAndUpdate({ departmentName }, { $addToSet: { subDepartments: subDepartmentName } }, { new: true }).then(response => {\r\n                    message = 'Successfully assigned team';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, { subDepartment });\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }).catch(error => {\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                })\r\n\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, subDepartmentName, description } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const subDepartment = await SubDepartment.findById(new ObjectId(id));\r\n            if (!subDepartment) {\r\n                message = 'SubDepartment not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                const existingSubDepartment = await SubDepartment.findOne({ subDepartmentName });\r\n                if (!existingSubDepartment || subDepartment?.subDepartmentName === subDepartmentName) {\r\n                    await SubDepartment.findByIdAndUpdate(new ObjectId(id), { subDepartmentName, description }).then(res => {\r\n                        message = 'Successfully updated subDepartment';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    // assign: async (req, res) => {\r\n    //     const { departmentFrom, departmentTo, subDepartments } = req.body;\r\n    //     try {\r\n    //         let message = \"\";\r\n    //         const DB = await switchDB(req.orgName, userSchemas);\r\n    //         const Department = await getDBModel(DB, \"Department\");\r\n    //         const DepartmentTo = await Department.findOne({ departmentTo });\r\n    //         const DepartmentFrom = await Department.findOne({ departmentFrom });\r\n    //         if (!DepartmentTo || !DepartmentFrom) {\r\n    //             message = 'Department not found';\r\n    //             return res.status(StatusCodes.NOT_FOUND).json({ message });\r\n    //         }\r\n    //         else {\r\n    //             await Department.findOneAndUpdate({ departmentName: departmentFrom }, { $pull: { subDepartments } }, { new: true }).then(async () => {\r\n    //                 await Department.findOneAndUpdate({ departmentName: departmentTo }, { $addToSet: { subDepartments } }, { new: true }).then(res => {\r\n    //                     message = 'Successfully updated department';\r\n    //                     let result = makeApiResponse(message, 1, StatusCodes.OK, res);\r\n    //                     res.status(StatusCodes.OK).json(result);\r\n    //                 }).catch(error => {\r\n    //                     res.status(StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n    //                 })\r\n    //             }).catch(error => {\r\n    //                 res.status(StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n    //             })\r\n    //         }\r\n    //     } catch (error) {\r\n    //         res.status(StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n    //     }\r\n    // },\r\n    assignSubDepHead: async (req, res) => {\r\n        const { subDepartmentName, subDepartmentHead } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const subDepartment = await SubDepartment.findOne({ subDepartmentName });\r\n            if (!subDepartment) {\r\n                message = 'SubDepartment not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await SubDepartment.findOneAndUpdate({ subDepartmentName }, { subDepartmentHead }).then(res => {\r\n                    message = 'Successfully updated subDepartment';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }).catch(error => {\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { subDepartmentName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const subDepartment = await SubDepartment.findOne({ subDepartmentName });\r\n            if (!subDepartment) {\r\n                message = 'SubDepartment not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Department.findOneAndUpdate({ departmentName: subDepartment?.departmentName }, { $pull: { subDepartments: subDepartmentName } }).then(async () => {\r\n                    await SubDepartment.findOneAndDelete({ subDepartmentName }).then(response => {\r\n                        message = 'SubDepartment deleted successfully';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    })\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    get: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"User\");\r\n            const user = await User.findById(req.userId, { username: 1, email: 1, userRole: 1 });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const getSubDepartments = await SubDepartment.find({});\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getSubDepartments);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/sub.department.controller.js?");

/***/ }),

/***/ "./src/controllers/team.controller.js":
/*!********************************************!*\
  !*** ./src/controllers/team.controller.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_2__.Types;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const {\r\n                description,\r\n                teamName,\r\n                teamMembers\r\n            } = req.body;\r\n            const organizationName = req.orgName\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            let team = await Team.findOne({ teamName });\r\n            if (team) {\r\n                message = 'Team already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                const team = await Team.create({\r\n                    description,\r\n                    teamName,\r\n                    teamMembers\r\n                });\r\n                message = 'Team has been created successfully.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, team);\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, teamName, description, teamMembers } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const team = await Team.findById(new ObjectId(id));\r\n            if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                const existingTeam = await Team.findOne({ teamName });\r\n                if (!existingTeam || team?.teamName === teamName) {\r\n                    await Team.findByIdAndUpdate(new ObjectId(id), { teamName, description, teamMembers }).then(res => {\r\n                        message = 'Successfully updated team';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    assignToDepartment: async (req, res) => {\r\n        const { departmentName, teamName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const department = await Department.findOne({ departmentName });\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!department) {\r\n                message = 'Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Team.findOneAndUpdate({ teamName }, { $addToSet: { departments: departmentName } }).then(async () => {\r\n                    await Department.findOneAndUpdate({ departmentName }, { $addToSet: { teams: teamName } }, { new: true }).then(response => {\r\n                        message = 'Successfully assigned team';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    assignToSubDepartment: async (req, res) => {\r\n        const { subDepartmentName, teamName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const subDepartment = await SubDepartment.findOne({ subDepartmentName });\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!subDepartment) {\r\n                message = 'Sub Department not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Team.findOneAndUpdate({ teamName }, { $addToSet: { subDepartments: subDepartmentName } }).then(async () => {\r\n                    await SubDepartment.findOneAndUpdate({ subDepartmentName }, { $addToSet: { teams: teamName } }, { new: true }).then(response => {\r\n                        message = 'Successfully assigned team';\r\n                        let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                    }).catch(error => {\r\n                        res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    assignLead: async (req, res) => {\r\n        const { teamName, teamHead } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Team.findOneAndUpdate({ teamName }, { teamMembers }).then(res => {\r\n                    message = 'Successfully updated team';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, res);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                }).catch(error => {\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n                })\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { teamName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                console.log(team);\r\n                team?.departments?.map(async item => {\r\n                    await Department.findOneAndUpdate({ departmentName: item }, { $pull: { teams: teamName } })\r\n                });\r\n                team?.subDepartments?.map(async item => {\r\n                    await SubDepartment.findOneAndUpdate({ subDepartmentName: item }, { $pull: { teams: teamName } })\r\n                });\r\n                await Team.findOneAndDelete({ teamName }).then(async response => {\r\n                    message = 'Team deleted successfully';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    deAssignFromDep: async (req, res) => {\r\n        const { departmentName, teamName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const Department = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Department\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await Department.findOneAndUpdate({ departmentName }, { $pull: { teams: teamName } }).then(async response => {\r\n                    message = 'Team de-assigned successfully';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    deAssignFromSubDep: async (req, res) => {\r\n        const { subDepartmentName, teamName } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const SubDepartment = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"SubDepartment\");\r\n            const team = await Team.findOne({ teamName });\r\n            if (!team) {\r\n                message = 'Team not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            else {\r\n                await SubDepartment.findOneAndUpdate({ subDepartmentName }, { $pull: { teams: teamName } }).then(async response => {\r\n                    message = 'Team de-assigned successfully';\r\n                    let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, response);\r\n                    res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    get: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"User\");\r\n            const user = await User.findById(req.userId, { username: 1, email: 1, userRole: 1 });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n            const Team = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Team\");\r\n            const getTeams = await Team.find({});\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_1__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getTeams);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/team.controller.js?");

/***/ }),

/***/ "./src/controllers/user.controller.js":
/*!********************************************!*\
  !*** ./src/controllers/user.controller.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http_status_codes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http-status-codes */ \"http-status-codes\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils.js */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/response.js */ \"./src/lib/response.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var _services_user_service_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/user.service.js */ \"./src/services/user.service.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { ObjectId } = mongoose__WEBPACK_IMPORTED_MODULE_4__.Types;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    create: async (req, res) => {\r\n        try {\r\n            const { error, value } = _services_user_service_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].validateCreateUserData(req.body);\r\n            if (error) {\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(error.message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            }\r\n            const {\r\n                username,\r\n                email,\r\n                password\r\n            } = req.body;\r\n            const organizationName = req.orgName\r\n            let message = '';\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_7__.initialSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            let user = await User.findOne({ email });\r\n            if (user) {\r\n                message = 'User already save in DB.';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 0, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST);\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BAD_REQUEST).json(result);\r\n            } else {\r\n                user = await User.create({\r\n                    email,\r\n                    organizationName\r\n                });\r\n                const userDb = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(organizationName.toLowerCase(), _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n                const newUser = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(userDb, \"User\");\r\n                user = await new newUser({\r\n                    username,\r\n                    email,\r\n                    password,\r\n                    organizationName\r\n                });\r\n                await user.save();\r\n                message = 'User has been created successfully.';\r\n            }\r\n            // RESPOND WITH SUCCESS\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: error.message });\r\n        }\r\n    },\r\n    update: async (req, res) => {\r\n        const { id, username, password } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_3__.genSalt(10);\r\n            const hashedpassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_3__.hash(password, salt);\r\n            const user = await User.findByIdAndUpdate(new ObjectId(id), { username, password: hashedpassword });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully updated';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, {});\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n    delete: async (req, res) => {\r\n        const { id } = req.body;\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            await User.findByIdAndDelete(new ObjectId(id)).then(() => {\r\n                message = 'Successfully removed';\r\n                let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, {});\r\n                res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n            });\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n    get: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            const user = await User.findById(req.userId, { username: 1, email: 1, userRole: 1 });\r\n            if (!user) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, user);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    },\r\n    list: async (req, res) => {\r\n        try {\r\n            let message = \"\";\r\n            const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.switchDB)(req.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_7__.userSchemas);\r\n            const User = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_6__.getDBModel)(DB, \"User\");\r\n            const getUsers = await User.find({ userRole: { $nin: _config_consts_js__WEBPACK_IMPORTED_MODULE_8__.AdminPerm } }, { username: 1, email: 1, userRole: 1 });\r\n            if (!getUsers) {\r\n                message = 'User not found';\r\n                return res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NOT_FOUND).json({ message });\r\n            }\r\n            message = 'Successfully';\r\n            let result = (0,_lib_response_js__WEBPACK_IMPORTED_MODULE_2__.makeApiResponse)(message, 1, http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK, getUsers);\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.OK).json(result);\r\n        } catch (error) {\r\n            res.status(http_status_codes__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.INTERNAL_SERVER_ERROR).json({ message: 'Server error' });\r\n        }\r\n    }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/controllers/user.controller.js?");

/***/ }),

/***/ "./src/lib/response.js":
/*!*****************************!*\
  !*** ./src/lib/response.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeApiResponse: () => (/* binding */ makeApiResponse)\n/* harmony export */ });\nconst makeApiResponse = (message, type, status_code, data ) => {\r\n    let responce = {\r\n        message: message,\r\n        type: type,\r\n        code: status_code,\r\n        data: data ? data : []\r\n    }\r\n    return responce;\r\n};\n\n//# sourceURL=webpack://mvc_project_starter/./src/lib/response.js?");

/***/ }),

/***/ "./src/lib/utils.js":
/*!**************************!*\
  !*** ./src/lib/utils.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getJWTToken: () => (/* binding */ getJWTToken)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n\r\n\r\n\r\nconst getJWTToken = async (payload) => {\r\n    if (!payload || typeof payload !== 'object') {\r\n        throw new Error('Invalid payload object');\r\n    }\r\n\r\n    const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.sign(\r\n        payload,\r\n        _config_config_js__WEBPACK_IMPORTED_MODULE_1__.devConfig.secret,\r\n        {\r\n            expiresIn: '365d',\r\n        });\r\n    return token;\r\n};\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/lib/utils.js?");

/***/ }),

/***/ "./src/middlewares/global-middleware.js":
/*!**********************************************!*\
  !*** ./src/middlewares/global-middleware.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setGlobalmiddleware: () => (/* binding */ setGlobalmiddleware)\n/* harmony export */ });\n/* harmony import */ var morgan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! morgan */ \"morgan\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var express_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! express-session */ \"express-session\");\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/config.js */ \"./src/config/config.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst setGlobalmiddleware = app => {\r\n\r\n  /**\r\n   * Load environment variables from .env file, where API keys and passwords are configured.\r\n   */\r\n  dotenv__WEBPACK_IMPORTED_MODULE_2__.config({ path: '.env' });\r\n  app.set('env', \"development\");\r\n  app.set('port', process.env.PORT || 1122);\r\n  app.use(cors__WEBPACK_IMPORTED_MODULE_1__());\r\n  app.use(morgan__WEBPACK_IMPORTED_MODULE_0__('dev'));\r\n  app.use(\r\n    express_session__WEBPACK_IMPORTED_MODULE_3__({\r\n      secret: _config_config_js__WEBPACK_IMPORTED_MODULE_4__.devConfig.secret,\r\n      resave: true,\r\n      saveUninitialized: true,\r\n    })\r\n  );\r\n\r\n};\n\n//# sourceURL=webpack://mvc_project_starter/./src/middlewares/global-middleware.js?");

/***/ }),

/***/ "./src/middlewares/permissions.js":
/*!****************************************!*\
  !*** ./src/middlewares/permissions.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyOrgAdminPermission: () => (/* binding */ verifyOrgAdminPermission),\n/* harmony export */   verifySuperAdminPermission: () => (/* binding */ verifySuperAdminPermission),\n/* harmony export */   verifyUserAdminPermission: () => (/* binding */ verifyUserAdminPermission),\n/* harmony export */   verifyUserPermission: () => (/* binding */ verifyUserPermission),\n/* harmony export */   verifyViewUserPermission: () => (/* binding */ verifyViewUserPermission)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n/* harmony import */ var _services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/mongo.service.js */ \"./src/services/mongo.service.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n\r\n\r\n\r\n\r\n\r\n\r\ndotenv__WEBPACK_IMPORTED_MODULE_1__.config();\r\n\r\nconst checkRoles = (arr, target) => target.every(el => arr?.includes(el));\r\nconst verifySuperAdminPermission = (req, res, next) => {\r\n    const token = req.headers['authorization'].split(' ')[1];\r\n    if (!token) {\r\n        return res.status(403).json({ message: 'No token provided' });\r\n    }\r\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, {}, (err, info) => {\r\n        if (info?.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_2__.SuperAdminPerm[0])) next();\r\n        else res.status(403).json({ message: \"You don't have permissions\" });\r\n    })\r\n}\r\nconst verifyOrgAdminPermission = (req, res, next) => {\r\n    const token = req.headers['authorization'].split(' ')[1];\r\n    if (!token) {\r\n        return res.status(403).json({ message: 'No token provided' });\r\n    }\r\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, {}, (err, info) => {\r\n        if (info?.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_2__.OrgAdminPerm[0])) next();\r\n        else res.status(403).json({ message: \"You don't have permissions\" });\r\n    })\r\n}\r\n\r\nconst verifyUserAdminPermission = (req, res, next) => {\r\n    const token = req.headers['authorization'].split(' ')[1];\r\n    if (!token) {\r\n        return res.status(403).json({ message: 'No token provided' });\r\n    }\r\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, {}, (err, info) => {\r\n        if (info?.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_2__.AdminPerm[0])) next();\r\n        else res.status(403).json({ message: \"You don't have permissions\" });\r\n    })\r\n}\r\n\r\nconst verifyUserPermission = (req, res, next) => {\r\n    const token = req.headers['authorization'].split(' ')[1];\r\n    if (!token) {\r\n        return res.status(403).json({ message: 'No token provided' });\r\n    }\r\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, {}, async (err, info) => {\r\n        const userPermissions = new Set();\r\n        const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(info?.organizationName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n        const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Role\");\r\n        const roles = await Role.find({ roleName: { $in: info?.userRole } });\r\n        if (roles) {\r\n            roles?.map(role => {\r\n                role?.permissions?.map(permission => {\r\n                    userPermissions.add(permission);\r\n                })\r\n            })\r\n            if (checkRoles(Array.from(userPermissions), _config_consts_js__WEBPACK_IMPORTED_MODULE_2__.UserPerm) || info?.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_2__.AdminPerm[0])) next();\r\n            else res.status(403).json({ message: \"You don't have permissions\" });\r\n        }\r\n        else res.status(403).json({ message: \"You don't have permissions\" });\r\n    })\r\n}\r\n\r\nconst verifyViewUserPermission = (req, res, next) => {\r\n    const token = req.headers['authorization'].split(' ')[1];\r\n    if (!token) {\r\n        return res.status(403).json({ message: 'No token provided' });\r\n    }\r\n    const requairedPermissions = [\"VIEW_USER\"];\r\n    jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, {}, async (err, info) => {\r\n        const userPermissions = new Set();\r\n        const DB = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.switchDB)(info?.organizationName, _config_db_js__WEBPACK_IMPORTED_MODULE_4__.userSchemas);\r\n        const Role = await (0,_services_mongo_service_js__WEBPACK_IMPORTED_MODULE_3__.getDBModel)(DB, \"Role\");\r\n        const roles = await Role.find({ roleName: { $in: info?.userRole } });\r\n        console.log(roles)\r\n        if (roles) {\r\n            roles?.map(role => {\r\n                role?.permissions?.map(permission => {\r\n                    userPermissions.add(permission);\r\n                })\r\n            })\r\n            if (checkRoles(Array.from(userPermissions), _config_consts_js__WEBPACK_IMPORTED_MODULE_2__.ViewUserPerm) || info?.userRole.includes(_config_consts_js__WEBPACK_IMPORTED_MODULE_2__.AdminPerm[0])) next();\r\n            else res.status(403).json({ message: \"You don't have permissions\" });\r\n        }\r\n        else res.status(403).json({ message: \"You don't have permissions\" });\r\n    })\r\n}\n\n//# sourceURL=webpack://mvc_project_starter/./src/middlewares/permissions.js?");

/***/ }),

/***/ "./src/middlewares/verify-token.js":
/*!*****************************************!*\
  !*** ./src/middlewares/verify-token.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n\r\n\r\n\r\ndotenv__WEBPACK_IMPORTED_MODULE_1__.config();\r\n\r\nconst verifyToken = (req, res, next) => {\r\n  const token = req.headers['authorization'].split(' ')[1];\r\n\r\n  if (!token) {\r\n    return res.status(403).json({ message: 'No token provided' });\r\n  }\r\n\r\n  jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.verify(token, process.env.SECRET_KEY, (err, decoded) => {\r\n    if (err) {\r\n      return res.status(401).json({ message: 'Unauthorized' });\r\n    }\r\n    req.userId = decoded.id;\r\n    req.email = decoded.email;\r\n    req.userRole = decoded.userRole;\r\n    req.orgName = decoded.organizationName\r\n    req.companyName = decoded.companyName\r\n    next();\r\n  });\r\n};\n\n//# sourceURL=webpack://mvc_project_starter/./src/middlewares/verify-token.js?");

/***/ }),

/***/ "./src/models/company.model.js":
/*!*************************************!*\
  !*** ./src/models/company.model.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst companySchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    companyName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    status: {\r\n        type: String,\r\n        required: true,\r\n        default: \"active\"\r\n    },\r\n    adminUser: {\r\n        username: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: true,\r\n            min: 3,\r\n            unique: true\r\n        }\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: false,\r\n    }\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (companySchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/company.model.js?");

/***/ }),

/***/ "./src/models/department.model.js":
/*!****************************************!*\
  !*** ./src/models/department.model.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst departmentSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    departmentName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    subDepartments: [{\r\n        type: String,\r\n        required: false,\r\n    }],\r\n    status: {\r\n        type: String,\r\n        required: true,\r\n        default: \"active\"\r\n    },\r\n    departmentHead: {\r\n        username: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: false,\r\n            min: 3,\r\n        }\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: false,\r\n    },\r\n    teams: [{ type: String }]\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (departmentSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/department.model.js?");

/***/ }),

/***/ "./src/models/organization.model.js":
/*!******************************************!*\
  !*** ./src/models/organization.model.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst organizationSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    organizationName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    status: {\r\n        type: String,\r\n        required: true,\r\n        default: \"active\"\r\n    },\r\n    adminUser: {\r\n        username: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: true,\r\n            min: 3,\r\n            unique: true\r\n        }\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: false,\r\n    }\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (organizationSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/organization.model.js?");

/***/ }),

/***/ "./src/models/permission.model.js":
/*!****************************************!*\
  !*** ./src/models/permission.model.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst permissionSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    permissionName: {\r\n        type: String,\r\n        required: true,\r\n        unique: true,\r\n        min: 3,\r\n    },\r\n    viewName: {\r\n        type: String,\r\n        required: true,\r\n        unique: true,\r\n        min: 3,\r\n    }\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (permissionSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/permission.model.js?");

/***/ }),

/***/ "./src/models/role.model.js":
/*!**********************************!*\
  !*** ./src/models/role.model.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst roleSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    roleName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    companyName: {\r\n        type: String,\r\n        required: false,\r\n        default: null\r\n    },\r\n    permissions: [{ type: String }]\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (roleSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/role.model.js?");

/***/ }),

/***/ "./src/models/sub.department.model.js":
/*!********************************************!*\
  !*** ./src/models/sub.department.model.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst subDepartmentSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    subDepartmentName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    departmentName: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    status: {\r\n        type: String,\r\n        required: true,\r\n        default: \"active\"\r\n    },\r\n    subDepartmentHead: {\r\n        username: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: false,\r\n            min: 3,\r\n        }\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: false,\r\n    },\r\n    teams: [{ type: String }]\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (subDepartmentSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/sub.department.model.js?");

/***/ }),

/***/ "./src/models/team.model.js":
/*!**********************************!*\
  !*** ./src/models/team.model.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n\r\n\r\nconst teamSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n    teamName: {\r\n        type: String,\r\n        required: true,\r\n        min: 3,\r\n        unique: true\r\n    },\r\n    status: {\r\n        type: String,\r\n        required: true,\r\n        default: \"active\"\r\n    },\r\n    teamMembers: [{\r\n        username: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        role: {\r\n            type: String,\r\n            required: true,\r\n            default: \"member\"\r\n        }\r\n    }],\r\n    description: {\r\n        type: String,\r\n        required: false,\r\n    },\r\n    departments: [{ type: String }],\r\n    subDepartments: [{ type: String }]\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (teamSchema);\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/team.model.js?");

/***/ }),

/***/ "./src/models/user.model.js":
/*!**********************************!*\
  !*** ./src/models/user.model.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   userLinkSchema: () => (/* binding */ userLinkSchema)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var mongoose_findorcreate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongoose-findorcreate */ \"mongoose-findorcreate\");\n\r\n\r\n\r\n\r\nconst userSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n  username: {\r\n    type: String,\r\n    required: false,\r\n    min: 3\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n    maxlength: 50,\r\n    unique: true,\r\n    lowercase: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: false,\r\n    min: 8,\r\n  },\r\n  userRole: {\r\n    type: [{ type: String }],\r\n    required: true,\r\n    default: \"NO_ROLE\"\r\n  },\r\n  organizationName: {\r\n    type: String,\r\n    required: true,\r\n    lowercase: true,\r\n  },\r\n  companyName: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  profileSetUp: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  }\r\n});\r\nuserSchema.plugin(mongoose_findorcreate__WEBPACK_IMPORTED_MODULE_2__);\r\nuserSchema.pre('save', async function (next) {\r\n  if (!this.isModified('password')) {\r\n    return next();\r\n  }\r\n  const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__.genSalt(10);\r\n  this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__.hash(this.password, salt);\r\n  next();\r\n});\r\n\r\nuserSchema.methods.matchPassword = async function (enteredPassword) {\r\n  return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare(enteredPassword, this.password);\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userSchema);\r\n\r\nconst userLinkSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n    maxlength: 50,\r\n    unique: true,\r\n    lowercase: true\r\n  },\r\n  organizationName: {\r\n    type: String,\r\n    required: false,\r\n    lowercase: true,\r\n  },\r\n  companyName: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  userRole: {\r\n    type: [{ type: String }],\r\n    required: false,\r\n  },\r\n})\r\n\r\nuserLinkSchema.methods.matchPassword = async function (enteredPassword) {\r\n  return await bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare(enteredPassword, this.password);\r\n};\n\n//# sourceURL=webpack://mvc_project_starter/./src/models/user.model.js?");

/***/ }),

/***/ "./src/routes/auth.route.js":
/*!**********************************!*\
  !*** ./src/routes/auth.route.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authRouter: () => (/* binding */ authRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/auth.controller.js */ \"./src/controllers/auth.controller.js\");\n\r\n\r\nconst authRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nauthRouter.post('/login', _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].login);\r\nauthRouter.get(\"/logout\", _controllers_auth_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logout);\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/auth.route.js?");

/***/ }),

/***/ "./src/routes/company.route.js":
/*!*************************************!*\
  !*** ./src/routes/company.route.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   companyRouter: () => (/* binding */ companyRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/company.controller.js */ \"./src/controllers/company.controller.js\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n\r\n\r\n\r\n\r\nconst companyRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\ncompanyRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyOrgAdminPermission], _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\r\ncompanyRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyOrgAdminPermission], _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update);\r\ncompanyRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyOrgAdminPermission], _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete);\r\ncompanyRouter.get('/getCompanay', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken], _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get);\r\ncompanyRouter.get(\"/getAllCompanies\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyOrgAdminPermission], _controllers_company_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list);\r\n\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/company.route.js?");

/***/ }),

/***/ "./src/routes/department.route.js":
/*!****************************************!*\
  !*** ./src/routes/department.route.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   departmentRouter: () => (/* binding */ departmentRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n/* harmony import */ var _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../controllers/department.controller.js */ \"./src/controllers/department.controller.js\");\n\r\n\r\n\r\n\r\nconst departmentRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\ndepartmentRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create);\r\ndepartmentRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].update);\r\ndepartmentRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].delete);\r\ndepartmentRouter.get('/getDepartment', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken], _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get);\r\ndepartmentRouter.get(\"/getAllDepartments\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].list);\r\n\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/department.route.js?");

/***/ }),

/***/ "./src/routes/organization.route.js":
/*!******************************************!*\
  !*** ./src/routes/organization.route.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   organizationRouter: () => (/* binding */ organizationRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _controllers_organization_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/organization.controller.js */ \"./src/controllers/organization.controller.js\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n\r\n\r\n\r\n\r\nconst organizationRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\n\r\norganizationRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifySuperAdminPermission], _controllers_organization_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\r\norganizationRouter.put('/setUp', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyOrgAdminPermission], _controllers_organization_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update);\r\norganizationRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifySuperAdminPermission], _controllers_organization_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete);\r\norganizationRouter.post('/getAllOrganizations', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifySuperAdminPermission], _controllers_organization_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list);\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/organization.route.js?");

/***/ }),

/***/ "./src/routes/role.route.js":
/*!**********************************!*\
  !*** ./src/routes/role.route.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   roleRouter: () => (/* binding */ roleRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/role.controller.js */ \"./src/controllers/role.controller.js\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n\r\n\r\n\r\n\r\nconst roleRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nroleRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\r\nroleRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update);\r\nroleRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete);\r\nroleRouter.post('/getRole', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get);\r\nroleRouter.post('/setRole', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setRole);\r\nroleRouter.get(\"/getAllRoles\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list);\r\nroleRouter.get(\"/getPermissions\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserAdminPermission], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].listPermissions);\r\nroleRouter.get(\"/getUserPermissions\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken], _controllers_role_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].userPermissions);\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/role.route.js?");

/***/ }),

/***/ "./src/routes/sub.department.route.js":
/*!********************************************!*\
  !*** ./src/routes/sub.department.route.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   subDepartmentRouter: () => (/* binding */ subDepartmentRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n/* harmony import */ var _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../controllers/sub.department.controller.js */ \"./src/controllers/sub.department.controller.js\");\n\r\n\r\n\r\n\r\nconst subDepartmentRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nsubDepartmentRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create);\r\nsubDepartmentRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].update);\r\nsubDepartmentRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].delete);\r\nsubDepartmentRouter.get('/getDepartment', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken], _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get);\r\nsubDepartmentRouter.get(\"/getAllSubDepartments\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_sub_department_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].list);\r\n\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/sub.department.route.js?");

/***/ }),

/***/ "./src/routes/team.route.js":
/*!**********************************!*\
  !*** ./src/routes/team.route.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   teamRouter: () => (/* binding */ teamRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n/* harmony import */ var _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../controllers/team.controller.js */ \"./src/controllers/team.controller.js\");\n\r\n\r\n\r\n\r\nconst teamRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nteamRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create);\r\nteamRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].update);\r\nteamRouter.post('/assign/teamLead', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].assignLead);\r\nteamRouter.post('/assign/department', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].assignToDepartment);\r\nteamRouter.post('/assign/subDepartment', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].assignToSubDepartment);\r\nteamRouter.post('/de-assign/department', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deAssignFromDep);\r\nteamRouter.post('/de-assign/subDepartment', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deAssignFromSubDep);\r\nteamRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].delete);\r\n// teamRouter.get('/getCompanay', [verifyToken], teamController.get);\r\nteamRouter.get(\"/getAllTeams\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_2__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_1__.verifyUserAdminPermission], _controllers_team_controller_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].list);\r\n\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/team.route.js?");

/***/ }),

/***/ "./src/routes/user.route.js":
/*!**********************************!*\
  !*** ./src/routes/user.route.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userRouter: () => (/* binding */ userRouter)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/user.controller.js */ \"./src/controllers/user.controller.js\");\n/* harmony import */ var _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/permissions.js */ \"./src/middlewares/permissions.js\");\n/* harmony import */ var _middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../middlewares/verify-token.js */ \"./src/middlewares/verify-token.js\");\n\r\n\r\n\r\n\r\nconst userRouter = express__WEBPACK_IMPORTED_MODULE_0__.Router();\r\n\r\nuserRouter.post('/create', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserPermission], _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\r\nuserRouter.put('/edit', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserPermission], _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update);\r\nuserRouter.post('/delete', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyUserPermission], _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete);\r\nuserRouter.get('/getUser', [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken], _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get);\r\nuserRouter.get(\"/getAllUsers\", [_middlewares_verify_token_js__WEBPACK_IMPORTED_MODULE_3__.verifyToken, _middlewares_permissions_js__WEBPACK_IMPORTED_MODULE_2__.verifyViewUserPermission], _controllers_user_controller_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list);\r\n\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/routes/user.route.js?");

/***/ }),

/***/ "./src/services/mongo.service.js":
/*!***************************************!*\
  !*** ./src/services/mongo.service.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDBUser: () => (/* binding */ createDBUser),\n/* harmony export */   createPermission: () => (/* binding */ createPermission),\n/* harmony export */   createSuperAdmin: () => (/* binding */ createSuperAdmin),\n/* harmony export */   deleteDBUser: () => (/* binding */ deleteDBUser),\n/* harmony export */   getDBModel: () => (/* binding */ getDBModel),\n/* harmony export */   switchDB: () => (/* binding */ switchDB),\n/* harmony export */   updateDBUser: () => (/* binding */ updateDBUser)\n/* harmony export */ });\n/* harmony import */ var _config_consts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/consts.js */ \"./src/config/consts.js\");\n/* harmony import */ var _config_db_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/db.js */ \"./src/config/db.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n\r\n\r\n\r\n\r\nconst switchDB = async (dbName, dbSchema) => {\r\n    const mongoose = await (0,_config_db_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n    if (mongoose.connection.readyState === 1) {\r\n        const db = mongoose.connection.useDb(dbName, { useCache: true })\r\n        // Prevent from schema re-registration\r\n        if (!Object.keys(db.models).length) {\r\n            dbSchema.forEach((schema, modelName) => {\r\n                db.model(modelName, schema)\r\n            })\r\n        }\r\n        return db\r\n    }\r\n    throw new Error('err')\r\n}\r\n\r\nconst getDBModel = async (db, modelName) => {\r\n    return db.model(modelName)\r\n}\r\n\r\nconst createDBUser = async (mongo, payload) => {\r\n    await mongo.db.command({\r\n        createUser: payload.orgName,\r\n        pwd: payload.password,\r\n        roles: [{ role: 'dbOwner', db: `${payload.orgName}` }],\r\n    });\r\n}\r\n\r\n\r\nconst updateDBUser = async (mongo, payload) => {\r\n    await mongo.db.command({\r\n        updateUser: payload.orgName,\r\n        pwd: payload.password,\r\n        roles: [{ role: 'dbOwner', db: `${payload.orgName}` }],\r\n    });\r\n}\r\n\r\nconst deleteDBUser = async (mongo, payload) => {\r\n    await mongo.db.command({\r\n        dropUser: payload.orgName,\r\n    });\r\n    const userDb = await switchDB(payload.orgName, _config_db_js__WEBPACK_IMPORTED_MODULE_1__.userSchemas);\r\n    await userDb.db.runCommand(\r\n        {\r\n            dropDatabase: 1\r\n        }\r\n    )\r\n}\r\n\r\nconst createPermission = async () => {\r\n    const DB = await switchDB(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_1__.initialSchemas);\r\n    const Permission = await getDBModel(DB, \"Permission\");\r\n    await Permission.create({ permissionName: \"VIEW_USER\", viewName: \"View User\" })\r\n}\r\n\r\n\r\nconst createSuperAdmin = async (mongo, payload) => {\r\n    const DB = await switchDB(\"\", _config_db_js__WEBPACK_IMPORTED_MODULE_1__.initialSchemas);\r\n    const User = await getDBModel(DB, \"User\");\r\n    const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_2__.genSalt(10);\r\n    const hashedpassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_2__.hash(\"12345678\", salt);\r\n    await User.create({\r\n        username : \"Super Admin\",\r\n        email : \"admin@admin.com\",\r\n        password : hashedpassword,\r\n        userRole: _config_consts_js__WEBPACK_IMPORTED_MODULE_0__.SuperAdminPerm,\r\n        organizationName : \"\"\r\n    })\r\n}\n\n//# sourceURL=webpack://mvc_project_starter/./src/services/mongo.service.js?");

/***/ }),

/***/ "./src/services/role.service.js":
/*!**************************************!*\
  !*** ./src/services/role.service.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! joi */ \"joi\");\n\r\n\r\n// Define the schema for user signup\r\nconst roleSchema = joi__WEBPACK_IMPORTED_MODULE_0__.object({\r\n  roleName: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n  permissions: joi__WEBPACK_IMPORTED_MODULE_0__.array(),\r\n});\r\nconst setRoleSchema = joi__WEBPACK_IMPORTED_MODULE_0__.object({\r\n  email: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n  roleName: joi__WEBPACK_IMPORTED_MODULE_0__.array(),\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  validateRoleCreationData(data) {\r\n    const { error, value } = roleSchema.validate(data, { abortEarly: false });\r\n    if (error) {\r\n      throw new Error(`Validation Error: ${error.details.map(x => x.message).join(', ')}`);\r\n    }\r\n    return value;\r\n  },\r\n  validateSetRoleData(data) {\r\n    const { error, value } = setRoleSchema.validate(data, { abortEarly: false });\r\n    if (error) {\r\n      throw new Error(`Validation Error: ${error.details.map(x => x.message).join(', ')}`);\r\n    }\r\n    return value;\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack://mvc_project_starter/./src/services/role.service.js?");

/***/ }),

/***/ "./src/services/user.service.js":
/*!**************************************!*\
  !*** ./src/services/user.service.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! joi */ \"joi\");\n\r\n\r\n// Define the schema for user signup\r\nconst createOrganizationUserSchema = joi__WEBPACK_IMPORTED_MODULE_0__.object({\r\n  username: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n  email: joi__WEBPACK_IMPORTED_MODULE_0__.string().email().max(50).required(),\r\n  password: joi__WEBPACK_IMPORTED_MODULE_0__.string().min(6).max(42).required(),\r\n  organizationName: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n});\r\n\r\nconst createcCompanyUserSchema = joi__WEBPACK_IMPORTED_MODULE_0__.object({\r\n  username: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n  email: joi__WEBPACK_IMPORTED_MODULE_0__.string().email().max(50).required(),\r\n  password: joi__WEBPACK_IMPORTED_MODULE_0__.string().min(6).max(42).required(),\r\n  companyName: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n});\r\n\r\nconst createUserSchema = joi__WEBPACK_IMPORTED_MODULE_0__.object({\r\n  username: joi__WEBPACK_IMPORTED_MODULE_0__.string().max(100).required(),\r\n  email: joi__WEBPACK_IMPORTED_MODULE_0__.string().email().max(50).required(),\r\n  password: joi__WEBPACK_IMPORTED_MODULE_0__.string().min(6).max(42).required(),\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  validateOrganizationUserData(data) {\r\n    const { error, value } = createOrganizationUserSchema.validate(data, { abortEarly: false });\r\n    if (error) {\r\n      throw new Error(`Validation Error: ${error.details.map(x => x.message).join(', ')}`);\r\n    }\r\n    return value;\r\n  },\r\n  validateCreateUserData(data) {\r\n    const { error, value } = createUserSchema.validate(data, { abortEarly: false });\r\n    if (error) {\r\n      throw new Error(`Validation Error: ${error.details.map(x => x.message).join(', ')}`);\r\n    }\r\n    return value;\r\n  },\r\n  validateCreateCompanyUserData(data) {\r\n    const { error, value } = createcCompanyUserSchema.validate(data, { abortEarly: false });\r\n    if (error) {\r\n      throw new Error(`Validation Error: ${error.details.map(x => x.message).join(', ')}`);\r\n    }\r\n    return value;\r\n  }\r\n});\n\n//# sourceURL=webpack://mvc_project_starter/./src/services/user.service.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.js");
/******/ 	
/******/ })()
;